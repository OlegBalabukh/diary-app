{"version":3,"sources":["components/Square/Square.js","components/Comment/Comment.js","components/Line/Line.js","components/CommentList/CommentList.js","components/Task/Task.js","components/TaskList/TaskList.js","components/App/App.js","index.js"],"names":["ColoredSquare","width","height","color","style","position","backgroundColor","margin","Comment","text","className","Square","ColoredLine","marginTop","marginBottom","CommentList","comments","taskNumber","getLastComment","form","colors","commentsEndRef","useRef","useEffect","current","scrollIntoView","behavior","map","index","key","Line","ref","name","rows","autoFocus","onKeyDown","e","value","target","keyCode","ctrlKey","onChange","Task","id","isFocused","commentsNumber","removeTask","setActiveTask","onClick","TaskList","useState","items","setItems","itemText","setItemText","data","localStorage","getItem","JSON","parse","setItem","stringify","setActiveItem","item","removeItem","filter","addLastComment","comment","onSubmit","preventDefault","length","newItem","Date","now","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e24ae74.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ColoredSquare = ({ width, height, color }) => (\r\n  <div\r\n    style={{\r\n      position: \"absolute\",\r\n      backgroundColor: color,\r\n      height: height,\r\n      width: width,\r\n      margin: \"0 0 0 -18px\"\r\n    }}\r\n  />\r\n);\r\n\r\nexport default ColoredSquare;","import React from 'react';\r\n\r\nimport Square from '../Square/Square';\r\nimport './Comment.css';\r\n\r\nconst Comment = ({ text, color }) => (\r\n    <div className=\"commentBlock\">\r\n      <div className=\"comment\">\r\n        <Square width=\"50px\" height=\"50px\" color={color} />\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n);\r\n\r\nexport default Comment;","import React from 'react';\r\n\r\nconst ColoredLine = ({ color, width }) => (\r\n  <hr\r\n    style={{\r\n        backgroundColor: color,\r\n        height: 0.5,\r\n        width: width,\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }}\r\n  />\r\n);\r\n\r\nexport default ColoredLine;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport Comment from '../Comment/Comment';\r\nimport Square from '../Square/Square';\r\nimport Line from '../Line/Line';\r\nimport './CommentList.css';\r\n\r\nconst CommentList = ({ comments, taskNumber, getLastComment }) => {\r\n\r\n  const form = {};\r\n  const colors = ['#FF8A00', '#47568D'];\r\n  const commentsEndRef = useRef(null);\r\n\r\n  const updateInput = (e) => {\r\n    form[e.target.name] = e.target;\r\n  }\r\n\r\n  const  keydownHandler = (e) => {\r\n    const { value } = e.target;\r\n    if(e.keyCode === 13 && e.ctrlKey && value) {\r\n      getLastComment(value);\r\n      form[\"textarea\"].value = \"\";\r\n    }\r\n  }\r\n\r\n  const scrollToBottom = () => {\r\n    commentsEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  useEffect(scrollToBottom, [comments]);\r\n\r\n  return (\r\n    <div className=\"commentsContainer\">\r\n      <h2>Comments #{taskNumber}</h2>\r\n      {comments.map((text, index) => (\r\n        <div key={index}>\r\n          { index > 0 && (<Line width=\"92%\" />) }\r\n          <Comment text={text} color={colors[index % 2]} />\r\n        </div>\r\n        ))}\r\n      \r\n      <div className=\"newCommentBlock\">\r\n        <div className=\"comment\" ref={commentsEndRef}>\r\n          <Square width=\"50px\" height=\"50px\" color=\"#E6E6E6\" />\r\n          <textarea\r\n            name=\"textarea\"\r\n            rows=\"3\"\r\n            autoFocus=\"autofocus\"\r\n            onKeyDown={keydownHandler}\r\n            onChange={updateInput}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default CommentList;","import React from 'react';\r\n\r\nimport Square from '../Square/Square';\r\nimport './Task.css';\r\n\r\nconst Task = ({ id, text, isFocused, commentsNumber, removeTask, setActiveTask }) => (\r\n  <div className=\"itemBlock\">\r\n    <div className=\"item\">\r\n      <div id=\"redFocus\">\r\n        { isFocused && (\r\n          <Square width=\"5px\" height=\"55px\" color=\"#FF2C5F\" />\r\n        )}\r\n      </div>\r\n      <h6 onClick={() => setActiveTask(id)} >\r\n        {text}\r\n        { commentsNumber > 0 && \r\n        <p id=\"comments\" className=\"badge badge-pill\">{commentsNumber}</p> }\r\n      </h6>\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        onClick={() => removeTask(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>      \r\n  </div>\r\n);\r\n\r\nexport default Task;","import React, { useState, useEffect } from 'react';\r\n\r\nimport CommentList from '../CommentList/CommentList';\r\nimport Task from '../Task/Task';\r\nimport Line from '../Line/Line';\r\nimport './TaskList.css';\r\n\r\nconst TaskList = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [itemText, setItemText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"tasks\");\r\n    if (data) {\r\n      setItems(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(items));\r\n  });\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    setItemText(value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!itemText.length) return;\r\n\r\n    const newItem = {\r\n      id: Date.now(),\r\n      text: itemText,\r\n      isFocused: false,\r\n      comments: []\r\n    };\r\n    setItems([...items, newItem]);\r\n    setItemText(\"\");\r\n  }\r\n\r\n  const setActiveItem = (id) => {\r\n    setItems(items.map(item => {\r\n      item.id === id ?\r\n      item.isFocused = true :\r\n      item.isFocused = false;\r\n      return item;\r\n    }));\r\n  }\r\n\r\n  const removeItem = (id) => {\r\n    setItems(items.filter(item => item.id !== id));\r\n  }\r\n\r\n  const addLastComment = (comment) => {\r\n    setItems(items.map(item => {\r\n      if (item.isFocused) {\r\n        item.comments = [...item.comments, comment];\r\n      }\r\n      return item;\r\n    }));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Items</h2>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={handleChange}\r\n            value={itemText}\r\n            placeholder=\"Type name here...\"\r\n          />\r\n          <button className=\"btn btn-success\">\r\n            Add new\r\n          </button>\r\n        </form>\r\n        {items.map(({ id, text, isFocused, comments }, index) => (\r\n          <div key={id}>\r\n          <Task\r\n            id={id}\r\n            text={text}\r\n            isFocused={isFocused}\r\n            commentsNumber={comments.length}\r\n            removeTask={removeItem}\r\n            setActiveTask={setActiveItem}\r\n          />\r\n          <Line width=\"90%\" />\r\n          { isFocused && (\r\n            <CommentList\r\n              comments={comments}\r\n              taskNumber={index+1}\r\n              getLastComment={addLastComment}\r\n            />\r\n          )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\n\r\nimport './App.css';\r\nimport TaskList from '../TaskList/TaskList';\r\n\r\n\r\nconst App = () => (\r\n  <div className=\"app\">\r\n    <header className=\"app-header\">\r\n      DIARY APP\r\n      <p>Keep your tasks here</p>\r\n    </header>\r\n    <TaskList />      \r\n  </div>\r\n  );\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}