{"version":3,"sources":["components/Square/Square.js","components/Comment/Comment.js","components/Line/Line.js","components/CommentList/CommentList.js","components/Task/Task.js","containers/TaskList/constants.js","containers/TaskList/TaskList.js","containers/TaskList/actions/addTask.action.js","containers/TaskList/actions/deleteTask.action.js","containers/TaskList/actions/setActiveTask.action.js","containers/TaskList/actions/addComment.action.js","containers/TaskList/actions/addTasksFromLocalStorage.action.js","containers/TaskList/reducers/taskList.reducer.js","store.js","components/App/App.js","index.js"],"names":["ColoredSquare","width","height","color","style","position","backgroundColor","margin","Comment","text","className","Square","ColoredLine","marginTop","marginBottom","CommentList","comments","taskNumber","addComment","form","colors","commentsEndRef","useRef","useEffect","current","scrollIntoView","behavior","id","map","index","key","Line","ref","name","rows","autoFocus","onKeyDown","e","value","target","keyCode","ctrlKey","onChange","Task","props","taskName","isFocused","commentsNumber","deleteTask","setActiveTask","onClick","ADD_TASK","connect","state","tasks","dispatch","addTask","newTask","type","payload","comment","addTasksFromLocalStorage","useState","setTaskName","data","localStorage","getItem","JSON","parse","setItem","stringify","onSubmit","preventDefault","length","Date","now","placeholder","createStore","concat","filter","task","composeWithDevTools","applyMiddleware","App","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c464ad3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ColoredSquare = ({ width, height, color }) => (\r\n  <div\r\n    style={{\r\n      position: \"absolute\",\r\n      backgroundColor: color,\r\n      height: height,\r\n      width: width,\r\n      margin: \"0 0 0 -18px\"\r\n    }}\r\n  />\r\n);\r\n\r\nexport default ColoredSquare;","import React from 'react';\r\n\r\nimport Square from '../Square/Square';\r\nimport './Comment.css';\r\n\r\nconst Comment = ({ text, color }) => (\r\n    <div className=\"commentBlock\">\r\n      <div className=\"comment\">\r\n        <Square width=\"50px\" height=\"50px\" color={color} />\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n);\r\n\r\nexport default Comment;","import React from 'react';\r\n\r\nconst ColoredLine = ({ color, width }) => (\r\n  <hr\r\n    style={{\r\n        backgroundColor: color,\r\n        height: 0.5,\r\n        width: width,\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }}\r\n  />\r\n);\r\n\r\nexport default ColoredLine;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport Comment from '../Comment/Comment';\r\nimport Square from '../Square/Square';\r\nimport Line from '../Line/Line';\r\nimport './CommentList.css';\r\n\r\nconst CommentList = ({ comments, taskNumber, addComment }) => {\r\n\r\n  const form = {};\r\n  const colors = ['#FF8A00', '#47568D'];\r\n  const commentsEndRef = useRef(null);\r\n\r\n  const updateInput = (e) => {\r\n    form[e.target.name] = e.target;\r\n  }\r\n\r\n  const  keydownHandler = (e) => {\r\n    const { value } = e.target;\r\n    if(e.keyCode === 13 && e.ctrlKey && value) {\r\n      addComment(value);\r\n      form[\"textarea\"].value = \"\";\r\n    }\r\n  }\r\n\r\n  const scrollToBottom = () => {\r\n    commentsEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  useEffect(scrollToBottom, [comments]);\r\n\r\n  return (\r\n    <div className=\"commentsContainer\">\r\n      <h2><i>Comments <span id=\"commentsNumber\">#{taskNumber}</span></i></h2>\r\n      {comments.map((text, index) => (\r\n        <div key={index}>\r\n          { index > 0 && (<Line width=\"92%\" />) }\r\n          <Comment text={text} color={colors[index % 2]} />\r\n        </div>\r\n        ))}\r\n      \r\n      <div className=\"newCommentBlock\">\r\n        <div className=\"comment\" ref={commentsEndRef}>\r\n          <Square width=\"50px\" height=\"50px\" color=\"#E6E6E6\" />\r\n          <textarea\r\n            name=\"textarea\"\r\n            rows=\"3\"\r\n            autoFocus=\"autofocus\"\r\n            onKeyDown={keydownHandler}\r\n            onChange={updateInput}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default CommentList;","import React from 'react';\r\n\r\nimport Square from '../Square/Square';\r\nimport './Task.css';\r\n\r\nconst Task = (props) => {\r\n  const { id, taskName, isFocused, commentsNumber } = props;\r\n  const { deleteTask, setActiveTask } = props;\r\n\r\n  return (\r\n    <div className=\"itemBlock\">\r\n      <div className=\"item\">\r\n        <div id=\"redFocus\">\r\n          { isFocused && (\r\n            <Square width=\"5px\" height=\"55px\" color=\"#FF2C5F\" />\r\n          )}\r\n        </div>\r\n        <h6 onClick={() => setActiveTask(id)} >\r\n          {taskName}\r\n          { commentsNumber > 0 && \r\n          <p id=\"comments\" className=\"badge badge-pill\">{commentsNumber}</p> }\r\n        </h6>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => deleteTask(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Task;","export const ADD_TASK = \"TaskList@addTask\";\r\nexport const ADD_COMMENT = 'TaskList@addComment';\r\nexport const ADD_TASKS_FROM_LOCAL_STORAGE = 'TaskList@addTasksFromLocalStorage';\r\n\r\nexport const DELETE_TASK = 'TaskList@deleteTask';\r\nexport const SET_ACTIVE_TASK = 'TaskList@setActiveTask';\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CommentList from '../../components/CommentList/CommentList';\r\nimport Task from '../../components/Task/Task';\r\nimport Line from '../../components/Line/Line';\r\nimport { addTaskAction } from \"./actions/addTask.action\";\r\nimport { deleteTaskAction } from \"./actions/deleteTask.action\";\r\nimport { setActiveTaskAction } from \"./actions/setActiveTask.action\";\r\nimport { addCommentAction } from \"./actions/addComment.action\";\r\nimport { addTasksFromLocalStorageAction } from \"./actions/addTasksFromLocalStorage.action\";\r\nimport './TaskList.css';\r\n\r\nconst TaskList = (props) => {\r\n  const { \r\n    addTask,\r\n    addTasksFromLocalStorage,\r\n    deleteTask,\r\n    setActiveTask,\r\n    addComment\r\n  } = props;\r\n\r\n  const { tasks } = props;\r\n\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"tasks\");\r\n    if (data) {\r\n      addTasksFromLocalStorage(JSON.parse(data));\r\n    }\r\n  }, [addTasksFromLocalStorage]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  });\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    setTaskName(value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!taskName.length) return;\r\n\r\n    const newTask = {\r\n      id: Date.now(),\r\n      taskName\r\n    }\r\n\r\n   addTask(newTask);\r\n   setTaskName(\"\");\r\n  }  \r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h2><i>Items</i></h2>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={handleChange}\r\n            value={taskName}\r\n            placeholder=\"Type name here...\"\r\n          />\r\n          <button className=\"btn btn-success\">\r\n            Add new\r\n          </button>\r\n        </form>\r\n        {tasks && tasks.map(({ id, taskName, isFocused, comments }, index) => (\r\n          <div key={id}>\r\n          <Task\r\n            id={id}\r\n            taskName={taskName}\r\n            isFocused={isFocused}\r\n            commentsNumber={comments.length}\r\n            deleteTask={deleteTask}\r\n            setActiveTask={setActiveTask}\r\n          />\r\n          <Line width=\"90%\" />\r\n          { isFocused && (\r\n            <CommentList\r\n              comments={comments}\r\n              taskNumber={index+1}\r\n              addComment={addComment}\r\n            />\r\n          )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addTask: (newTask) => { dispatch(addTaskAction(newTask)); },\r\n  deleteTask: (id) => { dispatch(deleteTaskAction(id)); },\r\n  setActiveTask: (id) => { dispatch(setActiveTaskAction(id)); },\r\n  addComment: (comment) => { dispatch(addCommentAction(comment)); },\r\n  addTasksFromLocalStorage: (tasks) => { \r\n    dispatch(addTasksFromLocalStorageAction(tasks));\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","import { ADD_TASK } from '../constants'\r\n\r\nexport const addTaskAction = (payload) => ({\r\n  type: ADD_TASK,\r\n  payload\r\n});","import { DELETE_TASK } from '../constants'\r\n\r\nexport const deleteTaskAction = (payload) => ({\r\n  type: DELETE_TASK,\r\n  payload\r\n});","import { SET_ACTIVE_TASK } from '../constants'\r\n\r\nexport const setActiveTaskAction = (payload) => ({\r\n  type: SET_ACTIVE_TASK,\r\n  payload\r\n});","import { ADD_COMMENT } from '../constants'\r\n\r\nexport const addCommentAction = (payload) => ({\r\n  type: ADD_COMMENT,\r\n  payload\r\n});","import { ADD_TASKS_FROM_LOCAL_STORAGE } from '../constants'\r\n\r\nexport const addTasksFromLocalStorageAction = (payload) => ({\r\n  type: ADD_TASKS_FROM_LOCAL_STORAGE,\r\n  payload\r\n});","import { \r\n  ADD_TASK,\r\n  ADD_COMMENT,\r\n  ADD_TASKS_FROM_LOCAL_STORAGE,\r\n  SET_ACTIVE_TASK,\r\n  DELETE_TASK\r\n} from '../constants'\r\n\r\nexport const taskListReducer = (state = [], {type, payload}) => {\r\n  switch(type) {\r\n\r\n    case ADD_TASK:  \r\n      return state.concat({\r\n        id: payload.id,\r\n        taskName: payload.taskName,\r\n        isFocused: false,\r\n        comments: []\r\n      });\r\n\r\n      case DELETE_TASK:\r\n        return state.filter(task =>\r\n          task.id !== payload );\r\n\r\n      case SET_ACTIVE_TASK:\r\n        return state.map(task => {\r\n          task.id === payload\r\n            ? task = {...task, isFocused: true}\r\n            : task = {...task, isFocused: false}\r\n          return task;\r\n        });\r\n\r\n      case ADD_COMMENT:\r\n        return state.map(task => {\r\n          task.isFocused &&\r\n          ( task = {\r\n            ...task,\r\n            comments: [ ...task.comments, payload]\r\n          })\r\n          return task;\r\n        });\r\n\r\n      case ADD_TASKS_FROM_LOCAL_STORAGE:\r\n        return payload;\r\n      \r\n      default:\r\n        return state\r\n  }\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { taskListReducer as reducer } from './containers/TaskList/reducers/taskList.reducer';\r\nexport default createStore(reducer, [], composeWithDevTools(applyMiddleware()));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport TaskList from '../../containers/TaskList/TaskList';\r\nimport store from '../../store';\r\n\r\nconst App = () => (\r\n  <div className=\"app\">\r\n    <header className=\"app-header\">\r\n      DIARY APP\r\n      <p>Keep your tasks here</p>\r\n    </header>\r\n    <Provider store = {store}>\r\n      <TaskList />\r\n    </Provider>\r\n  </div>\r\n  );\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}